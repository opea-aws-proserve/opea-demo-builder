---
# Source: chatqna/charts/redis-vector-db/templates/deployment.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatqna-redis-vector-db
  labels:
    helm.sh/chart: redis-vector-db-1.0.0
    app.kubernetes.io/name: redis-vector-db
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "7.2.0-v9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-vector-db
      app.kubernetes.io/instance: chatqna
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-vector-db
        app.kubernetes.io/instance: chatqna
    spec:
      securityContext:
        {}
      containers:
        - name: redis-vector-db
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "redis/redis-stack:7.2.0-v9"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data
              name: data-volume
            - mountPath: /redisinsight
              name: redisinsight-volume
            - mountPath: /tmp
              name: tmp
          ports:
            - name: redis-service
              containerPort: 6379
              protocol: TCP
            - name: redis-insight
              containerPort: 8001
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: 6379 # Probe the Redis port
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 120
          resources:
            {}
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: redisinsight-volume
          emptyDir: {}
        - name: tmp
          emptyDir: {}

---
# Source: chatqna/charts/redis-vector-db/templates/service.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: chatqna-redis-vector-db
  labels:
    helm.sh/chart: redis-vector-db-1.0.0
    app.kubernetes.io/name: redis-vector-db
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "7.2.0-v9"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
      - port: 6379
        targetPort: 6379
        protocol: TCP
        name: redis-service
      - port: 8001
        targetPort: 8001
        protocol: TCP
        name: redis-insight
  selector:
    app.kubernetes.io/name: redis-vector-db
    app.kubernetes.io/instance: chatqna

---
# Source: chatqna/charts/retriever-usvc/templates/configmap.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: chatqna-retriever-usvc-config
  labels:
    helm.sh/chart: retriever-usvc-1.0.0
    app.kubernetes.io/name: retriever-usvc
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
data:
  TEI_EMBEDDING_ENDPOINT: "http://chatqna-tei"
  EMBED_MODEL: ""
  REDIS_URL: "redis://chatqna-redis-vector-db:6379"
  INDEX_NAME: "rag-redis"
  EASYOCR_MODULE_PATH: "/tmp/.EasyOCR"
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  HF_HOME: "/tmp/.cache/huggingface"
  HUGGINGFACEHUB_API_TOKEN: "insert-your-huggingface-token-here"
  LOGFLAG: ""

---
# Source: chatqna/charts/retriever-usvc/templates/deployment.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatqna-retriever-usvc
  labels:
    helm.sh/chart: retriever-usvc-1.0.0
    app.kubernetes.io/name: retriever-usvc
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: retriever-usvc
      app.kubernetes.io/instance: chatqna
  template:
    metadata:
      labels:
        app.kubernetes.io/name: retriever-usvc
        app.kubernetes.io/instance: chatqna
    spec:
      securityContext:
        {}
      containers:
        - name: chatqna
          envFrom:
            - configMapRef:
                name: chatqna-retriever-usvc-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "opea/retriever-redis:latest"
          imagePullPolicy: Always
          ports:
            - name: retriever-usvc
              containerPort: 7000
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          livenessProbe:
            failureThreshold: 24
            httpGet:
              path: v1/health_check
              port: retriever-usvc
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: v1/health_check
              port: retriever-usvc
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: v1/health_check
              port: retriever-usvc
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {}
      volumes:
        - name: tmp
          emptyDir: {}

---
# Source: chatqna/charts/retriever-usvc/templates/service.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: chatqna-retriever-usvc
  labels:
    helm.sh/chart: retriever-usvc-1.0.0
    app.kubernetes.io/name: retriever-usvc
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7000
      targetPort: 7000
      protocol: TCP
      name: retriever-usvc
  selector:
    app.kubernetes.io/name: retriever-usvc
    app.kubernetes.io/instance: chatqna

---
# Source: chatqna/charts/data-prep/templates/configmap.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: chatqna-data-prep-config
  labels:
    helm.sh/chart: data-prep-1.0.0
    app.kubernetes.io/name: data-prep
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
data:
  TEI_ENDPOINT: "http://chatqna-tei"
  EMBED_MODEL: ""
  REDIS_URL: "redis://chatqna-redis-vector-db:6379"
  INDEX_NAME: "rag-redis"
  KEY_INDEX_NAME: "file-keys"
  SEARCH_BATCH_SIZE: "10"
  HUGGINGFACEHUB_API_TOKEN: "insert-your-huggingface-token-here"
  HF_HOME: "/tmp/.cache/huggingface"
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  LOGFLAG: ""

---  
# Source: chatqna/charts/data-prep/templates/deployment.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatqna-data-prep
  labels:
    helm.sh/chart: data-prep-1.0.0
    app.kubernetes.io/name: data-prep
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: data-prep
      app.kubernetes.io/instance: chatqna
  template:
    metadata:
      labels:
        app.kubernetes.io/name: data-prep
        app.kubernetes.io/instance: chatqna
    spec:
      securityContext:
        {}
      containers:
        - name: chatqna
          envFrom:
            - configMapRef:
                name: chatqna-data-prep-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          image: "opea/dataprep-redis:latest"
          imagePullPolicy: Always
          ports:
            - name: data-prep
              containerPort: 6007
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          livenessProbe:
            failureThreshold: 24
            httpGet:
              path: v1/health_check
              port: data-prep
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: v1/health_check
              port: data-prep
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: v1/health_check
              port: data-prep
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {}
      volumes:
        - name: tmp
          emptyDir: {}

---
# Source: chatqna/charts/data-prep/templates/service.yaml
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: chatqna-data-prep
  labels:
    helm.sh/chart: data-prep-1.0.0
    app.kubernetes.io/name: data-prep
    app.kubernetes.io/instance: chatqna
    app.kubernetes.io/version: "v1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6007
      targetPort: 6007
      protocol: TCP
      name: data-prep
  selector:
    app.kubernetes.io/name: data-prep
    app.kubernetes.io/instance: chatqna
